generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_DATABASE_URL")
}

model Birthday {
    userId    String   @map("user_id") @db.VarChar(19)
    guildId   String   @map("guild_id") @db.VarChar(19)
    birthday  String   @db.VarChar(10)
    disabled  Boolean  @default(false)
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")
    user      User     @relation(fields: [userId], references: [id])
    guild     Guild    @relation(fields: [guildId], references: [id])

    @@unique([userId, guildId])
    @@index([birthday])
    @@map("birthday")
}

model Guild {
    id                  String     @id @db.VarChar(19)
    inviter             String?    @db.VarChar(19)
    announcementChannel String?    @db.VarChar(19)
    announcementMessage String?    @db.VarChar(512)
    overviewChannel     String?    @db.VarChar(19)
    overviewMessage     String?    @db.VarChar(19)
    birthdayRole        String?    @map("birthday_role") @db.VarChar(19)
    birthdayPingRole    String?    @map("birthday_ping_role") @db.VarChar(19)
    logChannel          String?    @map("log_channel") @db.VarChar(19)
    timezone            Int        @default(0)
    premium             Boolean    @default(false)
    language            String     @default("en-US") @db.VarChar(5)
    createdAt           DateTime   @default(now()) @map("created_at")
    updatedAt           DateTime   @updatedAt @map("updated_at")
    disabled            Boolean    @default(false)
    birthday            Birthday[]

    @@index([id])
    @@map("guild")
}

model User {
    id            String     @id @db.VarChar(19)
    username      String?    @db.VarChar(19)
    discriminator String?    @db.VarChar(4)
    premium       Boolean    @default(false)
    createdAt     DateTime   @default(now()) @map("created_at")
    updatedAt     DateTime   @updatedAt @map("updated_at")
    birthday      Birthday[]

    @@index([id])
    @@map("user")
}

model Premium {
    userId  String  @map("user_id") @db.VarChar(19)
    guildId String  @map("guild_id") @db.VarChar(19)
    tier    Boolean @default(true)

    @@unique([userId, guildId])
    @@map("premium")
}

model Tiers {
    id        Int      @id @default(autoincrement())
    name      String?  @db.VarChar(512)
    updatedAt DateTime @updatedAt @db.Timestamp(0)

    @@map("tiers")
}
